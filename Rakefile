# Setup and manage stasis ready github pages directory
#
# provides a couple handy methods for using stasis on github pages to use
# simple copy to a new directory to be used as the base for your github page
#
# rake setup_repository_for_github_user_page
# will initialize the repository as needed
#
# rake publish
# will publish a new version of the site from whatever is generated by stasis
#
# rake development (default so just run rake)
# will run a stasis development server ready on port 3000 locally
#
# Author: Philipp Fehre Github: @sideshowcoder Twitter: @ischi

require 'tmpdir'

desc 'Setup the repository for Github user or organization page run this in an empty folder'
task :setup_repository_for_github_user_page do
  `git init`
  `git checkout -b source`
  `echo 'the source lives here in this branch' > README`
  `git add -A`
  `git commit -m'setup source branch'`
  `git checkout --orphan master`
  rm_rf FileList['*']
  `echo '<h1>the content lives here in this branch</h1>' > index.html`
  `git add -A`
  `git commit -m'setup content branch'`
  `git checkout source`
  puts <<-INFO

  Repository setup locally now create a repository named USERNAME.github.com
  and point the origin it's way.

  The rest of the Rakefile assumes a stasis default setup to be used so

  rake development
  runs a local development server on port 3000, watching the current dir

  rake generate
  generates the current page inside public

  rake publish
  publishes whatever is currently generated to the master branch ready to push

  Have a great day!
  @sideshowcoder <Twitter @ischi>
  INFO
end

desc 'Generate page'
task :generate do
  `bundle exec stasis`
end

desc 'Remove generated files'
task :clean do
  rm_rf 'public'
end

desc 'Publish updated page'
task :publish => [:generate] do
  Dir.mktmpdir { |dir|
    mv FileList['public/*'], dir
    current_commit = `git rev-parse --short HEAD`
    `git stash`
    `git checkout master`
    rm_rf FileList['*']
    mv FileList["#{dir}/*"], '.'
    `git add -A`
    `git commit -m 'published from #{current_commit}'`
    `git push origin master`
    `git checkout source`
    `git stash pop`
  }
end

desc 'Start development'
task :development do
  puts 'Starting stasis watcher and server, visit http://localhost:3000 to view'
  pid = fork { exec 'bundle exec stasis -d 3000' }
  begin
    Process.wait pid
  rescue Object
    Process.kill 'TERM', pid
    Process.wait pid
    puts 'Something went wrong, try bundle exec stasis -d 3000 for more information' unless $?.success?
  end
end

task :default => :development

